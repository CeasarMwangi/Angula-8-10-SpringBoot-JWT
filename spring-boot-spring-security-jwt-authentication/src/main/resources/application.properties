## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url= jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username= postgres
#spring.datasource.password= 123
#
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto= update

# App Properties
bezkoder.app.jwtSecret= bezKoderSecretKey1
bezkoder.app.jwtExpirationMs= 86400000

spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.format_sql=false
#####################################################
spring.datasource.url=jdbc:sqlserver://127.0.0.1:1433;databaseName=springboot_jwt_demo
spring.datasource.username=sa
spring.datasource.password=QDckmA@2019)
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto = update
spring.datasource.hikari.auto-commit=true

# ###############################################

#If you're using Spring boot 2, database initialization only works for embedded databases 
#(H2, HSQLDB, ...). If you want to use it for other databases as well, 
#you need to change the spring.datasource.initialization-mode property:
spring.datasource.initialization-mode=always

#If you're using multiple database vendors, you can name your file data-h2.sql 
#or data-mysql.sql depending on which database platform you want to use.
#To make that work, you'll have to configure the spring.datasource.platform property though:
spring.datasource.platform=mssql
